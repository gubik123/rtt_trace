#![no_std]
#![doc = include_str!("../../README.md")]
use utrace_core::encoding::TracePoint;
pub use utrace_macros::{default_transport, timestamp, trace, trace_here};

mod globals;

/// Internal RAII tracer implementation.
///
/// Calls to this API are always generated by macros;
/// hence, this module is an internal implementation
/// detail and should not be used directly.
pub mod tracer;
pub use tracer::Tracer;

/// This function can be called during initialization.
/// Its current purpose is to establish reference time,
/// relative to which all events will be timestamped and
/// to emit Reset packet. This packet can be used by
/// trace stream capture tool to start a new trace. It
/// is possible to call `init` multiple times during execution
/// to logically separate the trace into several parts.
pub fn init() {
    let _ = crate::globals::default_timestamp_delta();
    utrace_core::encoding::encode(
        TracePoint { delta_t: 0, id: 0 },
        crate::globals::default_write,
    );
}
